version: '3.3'

services:
  kafka:
    image: {{ kafka_image }}
    container_name: kafka
    ports:
      - "{{ kafka_listener_port.external }}:{{ kafka_listener_port.external }}"
      - "{{ kafka_listener_port.internal }}:{{ kafka_listener_port.internal }}"
      - "{{ kafka_listener_port.controller }}:{{ kafka_listener_port.controller }}"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:{{ kafka_listener_port.internal }},CONTROLLER://:{{ kafka_listener_port.controller }},EXTERNAL://:{{ kafka_listener_port.external }}
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://{{ ansible_host }}:{{ kafka_listener_port.internal }},EXTERNAL://{{ ansible_host }}:{{ kafka_listener_port.external }}
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS={% for host in groups['kafka'] %}{{ hostvars[host].kafka_id }}@{{ hostvars[host].ansible_host }}:{{ kafka_listener_port.controller }}{{ "," if not loop.last else "\n" }}{% endfor %}
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID={{ kafka_id }}
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_NUM_PARTITIONS=3
      - KAFKA_KRAFT_CLUSTER_ID={{ kafka_kraft_cluster_id }}
    restart: unless-stopped

  exporter:
    image: {{ kafka_exporter_image }}
    container_name: kafka_exporter
    ports:
      - "{{ kafka_exporter_port|default(4888) }}:{{ kafka_exporter_port|default(4888) }}"
    volumes:
      - ./exporter_config.yaml:/app/exporter_config.yaml
    environment:
      - CONFIG_FILEPATH=/app/exporter_config.yaml
    restart: always
